<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="iconoBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>